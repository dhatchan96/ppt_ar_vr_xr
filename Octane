def getSuiteRun(self, name, suiteID):
    """
    Retrieve a suite run based on name and suite ID.

    :param name: Name of the suite run.
    :param suiteID: ID of the test suite.
    :return: Response containing suite run details.
    """
    response = self.endpoint.get(
        f"suite_run?fields=id,name&query=\"name EQ '{name}' and test EQ {suiteID}\""
    )
    return response[1]["data"]

def getAutoRuns(self, name, suiteRunID):
    """
    Retrieve automated runs for a given suite run.

    :param name: Name of the automated run.
    :param suiteRunID: ID of the suite run.
    :return: Response containing automated run details.
    """
    response = self.endpoint.get(
        f"automated_runs?fields=id,name,parent_suite&query=\"name EQ '{name}' and parent_suite EQ {suiteRunID}\""
    )
    return response[1]["data"]

def updateAutoRuns(self, octaneID, name, suiteRunID):
    """
    Update automated runs for a given suite run.

    :param octaneID: ID of the Octane entity to link runs.
    :param name: Name of the automated run.
    :param suiteRunID: ID of the suite run.
    """
    runs = self.getAutoRuns(name, suiteRunID)  # Fetch all automated runs
    sliceSize = self.octaneConfig.get("AutoRunsSliceSize")  # Fetch batch size
    slice = 0

    while True:
        # Process batch-wise updates
        batch = ",".join([f"'{r['id']}'" for r in runs[slice * sliceSize: (slice + 1) * sliceSize]])
        if not batch:
            break  # Exit loop if no more runs

        response = self.endpoint.put(
            f"automated_runs?fields=id,name,parent_suite&query=\"id IN {batch} and name EQ '{name}' and parent_suite EQ {suiteRunID}\"",
            data={
                "data": [
                    {
                        "covered_content": {
                            "data": [
                                {
                                    "type": "story",
                                    "id": octaneID
                                }
                            ]
                        }
                    }
                ]
            }
        )
        slice += 1  # Move to the next batch
