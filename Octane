def createApplicationModule(self, path, parentID):
    """
    Create or fetch an application module in Octane.

    :param path: Path of the application module.
    :param parentID: Parent module ID.
    :return: ID of the created or fetched module.
    """
    for child in path.split("/"):
        resp = self.octaneClient.getApplicationModule(child, parentID)

        # Check if the application module exists
        if resp and resp[0] == "Success" and resp[1]["total_count"] == 1:
            parentID = resp[1]["data"][0]["id"]
            continue
        elif not resp:
            raise Exception(
                "No response querying Application Module, name: %s, parentID: %s" % (child, parentID)
            )

        # Create the application module if not found
        resp = self.octaneClient.createApplicationModule(child, parentID)

        # Validate the creation response
        if resp and resp[0] == "Success" and resp[1]["total_count"] == 1:
            parentID = resp[1]["data"][0]["id"]
        elif not resp:
            raise Exception(
                "No response creating Application Module, name: %s, parentID: %s" % (child, parentID)
            )
        else:
            raise Exception(
                "Failed to create Application Module, name: %s, parentID: %s" % (child, parentID),
                (resp),
            )

    return parentID
