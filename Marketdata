function handleSelectionChange(currentKey, nextKey, nextDropdownId) {
  const currentDropdownId = keyToIdMap[currentKey]; // Map JSON key to dropdown id
  const currentDropdown = document.getElementById(currentDropdownId);

  if (!currentDropdown) {
    console.error(`Dropdown with id "${currentDropdownId}" not found.`);
    return;
  }

  const selectedValue = currentDropdown.value;

  if (selectedValue) {
    // Filter the values based on the current selection
    const filteredValues = values.filter(item => {
      if (Array.isArray(item[currentKey])) {
        return item[currentKey].includes(selectedValue); // Handle arrays for fields like Consumer
      } else {
        return item[currentKey] === selectedValue; // Handle normal fields
      }
    });

    let nextOptions = [];
    if (nextKey === "Consumer") {
      // Handle array values for Consumer
      nextOptions = [
        ...new Set(
          filteredValues.flatMap(item => item[nextKey]) // Flatten arrays and deduplicate
        )
      ];
    } else {
      // Handle normal keys (non-array fields)
      nextOptions = [...new Set(filteredValues.map(item => item[nextKey]))];
    }

    console.log(`Options for ${nextKey}:`, nextOptions); // Debugging log
    updateDropdown(nextDropdownId, nextOptions);
  } else {
    // Reset the subsequent dropdown if no value is selected
    updateDropdown(nextDropdownId, []);
  }
}
