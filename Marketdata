function handleSelectionChange(currentKey, nextKey, nextDropdownId) {
  const currentDropdownId = keyToIdMap[currentKey];
  const currentDropdown = document.getElementById(currentDropdownId);

  if (!currentDropdown) {
    console.error(`Dropdown with id "${currentDropdownId}" not found.`);
    return;
  }

  const selectedValue = currentDropdown.value;

  if (selectedValue) {
    const filteredValues = values.filter(item => {
      if (Array.isArray(item[currentKey])) {
        return item[currentKey].includes(selectedValue);
      } else {
        return item[currentKey] === selectedValue;
      }
    });

    let nextOptions = [];
    if (nextKey === "Consumer") {
      nextOptions = [...new Set(filteredValues.flatMap(item => item[nextKey]))];
    } else {
      nextOptions = [...new Set(filteredValues.map(item => item[nextKey]))];
    }

    updateDropdown(nextDropdownId, nextOptions);
  } else {
    updateDropdown(nextDropdownId, []);
  }

  // Check if all dropdowns have non-empty values
  const allDropdownIds = ['runDate', 'cobDate', 'consumer', 'cutoff', 'exposure', 'scenario'];
  const allFilled = allDropdownIds.every(id => {
    const dropdown = document.getElementById(id);
    return dropdown && dropdown.value !== ""; // Ensure dropdown exists and has a selected value
  });

  if (allFilled) {
    const selectedValues = allDropdownIds.map(id => document.getElementById(id).value);
    const formAction = selectedValues.join('/');
    document.querySelector('form').action = formAction;
    document.querySelector('form').submit();
  }
}
