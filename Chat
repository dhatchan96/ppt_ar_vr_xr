from qz.sdlc.rm.services.releasemanager import ReleaseManagerService
import sandra
from unittest import mock
from qz.core.test.qzunittest import QzTestCase

class ReleaseManagerServiceTest(QzTestCase):

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
        mock.patch(
            'qz.sdlc.rm.services.releasemanager.ReleaseManagerService._fetchOnBehalfOfToken',
            return_value={'token': 'token_code', 'status_code': 200}
        ).start()
        mock.patch(
            'qz.people.isServiceAccount',
            return_value=False
        ).start()

    def test_getToken(self):
        rms = ReleaseManagerService('Quartz', 'local')
        self.assertEqual(
            rms.getToken(),
            {
                'status': True,
                'on_behalf': sandra.srcdb.user,
                'token': 'token_code',
                'status_code': 200
            }
        )

    def test_getReleaseContainer(self):
        with mock.patch(
            'qz.sdlc.rm.lib.api.get_release_container_status',
            return_value=(200, {
                'status': 'OK',
                'releaseKey': 'releaseKey',
                'releaseName': 'releaseName',
                'status': 'status',
                'links': {'links': 'links'},
                'workItemIds': ['workItemIds']
            })
        ):
            rms = ReleaseManagerService('Quartz', 'local')
            self.assertEqual(
                rms.getReleaseContainer('RM-SDLC-1234'),
                {
                    'status': True,
                    'message': 'OK',
                    'status_code': 200,
                    'ReleaseContainer': {
                        'releaseKey': 'releaseKey',
                        'releaseName': 'releaseName',
                        'status': 'status',
                        'links': {'links': 'links'},
                        'workItemIds': ['workItemIds'],
                        'crq': None,
                        'createdAt': None,
                        'createdBy': None,
                        'updatedAt': None,
                        'updatedBy': None,
                    }
                }
            )
