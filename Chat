def upload_single_slice(self, resultsSlice, slice_index):
    testRuns = "\n".join([
        TEST_RUN.format(
            testname=testname.split('.')[0] + '.' + testname.split('.')[-1].rsplit('-', 3)[1],
            testclass=testclass,
            status=status,
            started=int(started)*1000,
            duration=int(duration),
            package=testname.rsplit('/', 1)[0],
            module=testSuitePath.rsplit('/', 1)[0]
        )
        for (testname, testclass, status, started, duration) in resultsSlice
    ])

    data = EVIDENCE_TEMPLATE_TEST_SUITE.format(
        test_results=testRuns,
        testSuiteID=testSuiteID,
        externalRunID=externalRunID,
        applicationModuleID=applicationModuleID
    )

    max_retries = 5
    retry_delay = 10  # seconds

    for attempt in range(max_retries):
        response = self.endpoint.post("test-results", data=data, dataType="xml")
        status, task_response = response

        if status == "Success":
            task_id = task_response.get("id")
            logger.info(f"Slice {slice_index}: Upload successful. Task ID: {task_id}")
            break

        elif "testbox_queue_full" in str(task_response) or "Queue limit" in str(task_response):
            logger.warning(f"Slice {slice_index}: Queue limit hit. Retrying after {retry_delay}s... ({attempt + 1}/{max_retries})")
            time.sleep(retry_delay)
            continue

        else:
            logger.error(f"Slice {slice_index}: Upload failed: {task_response}")
            raise RuntimeError(f"Failed to upload test results slice: {task_response}")
    else:
        raise RuntimeError(f"Slice {slice_index}: Failed after {max_retries} retries due to persistent queue limit.")

    # Proceed with task tracking
    task_id = task_response.get("id")
    return task_id
