# Project setup commands
npx create-react-app aes-tool
cd aes-tool
npm install
npm start

After creating the project, replace the contents of src/ with the files below.


---

1. src/App.js

import React, { useState } from "react";
import Sidebar from "./components/Sidebar";
import ProgressBar from "./components/ProgressBar";
import FormSection from "./components/FormSection";
import "./App.css";

const SECTION_NAMES = [
  "Application Details",
  "Leadership Alignment",
  "Build Management",
  "Deployment Management",
  "Environment Refresh",
  "Environment Patching",
  "Environment Monitoring",
  "Environment Housekeeping",
  "LEM Responsibilities",
  "Team Dynamics",
  "Other Activities",
  "Key Contacts",
  "Environment Landscape",
];

export default function App() {
  const [sections, setSections] = useState(
    SECTION_NAMES.map((name) => ({ name, completed: false }))
  );
  const [current, setCurrent] = useState(0);

  const markCompleted = () => {
    setSections((prev) =>
      prev.map((s, i) => (i === current ? { ...s, completed: true } : s))
    );
    if (current < sections.length - 1) setCurrent(current + 1);
  };

  const completedCount = sections.filter((s) => s.completed).length;
  const progress = (completedCount / sections.length) * 100;

  return (
    <div className="app">
      <header className="app-header">
        <h1>Application Engineering Services Tool</h1>
        <div className="user-info">
          <span>Janakiraman, Karthikeyan</span>
          <button className="new-inventory">+ New Inventory</button>
        </div>
      </header>

      <main>
        <h2>Tools Inventory</h2>
        <h3>
          <strong>AES Current state analysis (CSA)</strong> |
          <span className="highlight-red"> LLE management</span>
        </h3>

        <ProgressBar value={progress} />

        <div className="container">
          <Sidebar
            sections={sections}
            current={current}
            onSelect={setCurrent}
          />

          <FormSection
            section={sections[current]}
            onNext={markCompleted}
            isLast={current === sections.length - 1}
          />
        </div>
      </main>
    </div>
  );
}


---

2. src/components/FormSection.js

import React from "react";
import ApplicationDetails from "./forms/ApplicationDetails";
import LeadershipAlignment from "./forms/LeadershipAlignment";
import BuildManagement from "./forms/BuildManagement";
import DeploymentManagement from "./forms/DeploymentManagement";
import EnvironmentRefresh from "./forms/EnvironmentRefresh";
import EnvironmentPatching from "./forms/EnvironmentPatching";
import EnvironmentMonitoring from "./forms/EnvironmentMonitoring";
import EnvironmentHousekeeping from "./forms/EnvironmentHousekeeping";
import LEMResponsibilities from "./forms/LEMResponsibilities";
import TeamDynamics from "./forms/TeamDynamics";
import OtherActivities from "./forms/OtherActivities";
import KeyContacts from "./forms/KeyContacts";
import EnvironmentLandscape from "./forms/EnvironmentLandscape";

export default function FormSection({ section, onNext, isLast }) {
  const renderForm = () => {
    switch (section.name) {
      case "Application Details":
        return <ApplicationDetails onNext={onNext} />;
      case "Leadership Alignment":
        return <LeadershipAlignment onNext={onNext} />;
      case "Build Management":
        return <BuildManagement onNext={onNext} />;
      case "Deployment Management":
        return <DeploymentManagement onNext={onNext} />;
      case "Environment Refresh":
        return <EnvironmentRefresh onNext={onNext} />;
      case "Environment Patching":
        return <EnvironmentPatching onNext={onNext} />;
      case "Environment Monitoring":
        return <EnvironmentMonitoring onNext={onNext} />;
      case "Environment Housekeeping":
        return <EnvironmentHousekeeping onNext={onNext} />;
      case "LEM Responsibilities":
        return <LEMResponsibilities onNext={onNext} />;
      case "Team Dynamics":
        return <TeamDynamics onNext={onNext} />;
      case "Other Activities":
        return <OtherActivities onNext={onNext} />;
      case "Key Contacts":
        return <KeyContacts onNext={onNext} />;
      case "Environment Landscape":
        return <EnvironmentLandscape onNext={onNext} />;
      default:
        return null;
    }
  };

  return renderForm();
}


---

3. Each file in src/components/forms/ (13 total) has this template:

import React from "react";
import "../FormSection.css";

export default function [ComponentName]({ onNext }) {
  return (
    <section className="form-section">
      <form
        onSubmit={(e) => {
          e.preventDefault();
          onNext();
        }}
      >
        <div className="form-grid">
          {/* Add form fields here for [ComponentName] */}
        </div>
        <div className="form-actions">
          <button type="submit">Next</button>
        </div>
      </form>
    </section>
  );
}

Replace [ComponentName] with:

ApplicationDetails

LeadershipAlignment

BuildManagement

DeploymentManagement

EnvironmentRefresh

EnvironmentPatching

EnvironmentMonitoring

EnvironmentHousekeeping

LEMResponsibilities

TeamDynamics

OtherActivities

KeyContacts

EnvironmentLandscape


You now have placeholder forms ready for all sidebar sections. Add fields to each as needed. Let me know if you want sample fields or connected API logic!

