import React, { useEffect, useMemo, useState, useRef } from "react"; import { AgGridReact } from "ag-grid-react"; import "ag-grid-community/styles/ag-grid.css"; import "ag-grid-community/styles/ag-theme-alpine.css";

export default function AESToolsReport() { const [columnDefs, setColumnDefs] = useState([]); const [rowData, setRowData] = useState([]); const [quickFilterText, setQuickFilterText] = useState(""); const gridRef = useRef();

useEffect(() => { fetch("/data.json") .then((res) => res.json()) .then((json) => { const schema = json.schema || []; const data = json.data || [];

const cols = schema.map((col) => ({
      headerName: col.colName,
      field: col.colName,
      sortable: true,
      filter: true,
      resizable: true,
    }));

    const rows = data.map((rowArr) => {
      const obj = {};
      schema.forEach((col, index) => {
        obj[col.colName] = rowArr[index];
      });
      return obj;
    });

    setColumnDefs(cols);
    setRowData(rows);
  });

}, []);

const defaultColDef = useMemo(() => ({ flex: 1, minWidth: 120, }), []);

const onExport = () => { gridRef.current.api.exportDataAsCsv(); };

return ( <div style={{ padding: 16 }}> <div style={{ marginBottom: 10, display: "flex", justifyContent: "space-between" }}> <input type="text" placeholder="Search across all columns..." style={{ width: 300, padding: 6 }} onChange={(e) => setQuickFilterText(e.target.value)} /> <button onClick={onExport} style={{ padding: "6px 12px", background: "#004080", color: "white", border: "none", borderRadius: 4 }}> Export CSV </button> </div>

<div className="ag-theme-alpine" style={{ height: "85vh", width: "100%" }}>
    <AgGridReact
      ref={gridRef}
      rowData={rowData}
      columnDefs={columnDefs}
      defaultColDef={defaultColDef}
      pagination
      paginationPageSize={100}
      animateRows
      quickFilterText={quickFilterText}
    />
  </div>
</div>

); }

