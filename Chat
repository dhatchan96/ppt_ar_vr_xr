import unittest
from unittest.mock import MagicMock, patch

class TestUploadQzR2Evidence(unittest.TestCase):

    @patch("qz.core.qzrelease.lib.generate_test_evidence.generate")
    def test_uploadQzR2Evidence(self, mock_generate):
        # Mock dependencies
        mock_self = MagicMock()
        mock_self.spkSpaceConfig.get.return_value = "mock_rootApplicationModuleID"
        mock_generate.return_value = ["mock_result"]

        # Sample inputs
        build = MagicMock()
        build.uniqueName = "test_build"
        regressionJiras = ["JIRA-123", "JIRA-456"]
        featureJiras = ["JIRA-789"]

        # Expected output
        expected_result = mock_self.upload.return_value

        # Call the method
        result = uploadQzR2Evidence(mock_self, build, regressionJiras, featureJiras)

        # Assertions
        mock_generate.assert_called_once_with(build, regressionJiras, True, featureJiras)
        mock_self.upload.assert_called_once_with(
            "mock_rootApplicationModuleID",
            mock_self._calculateEvidencePath(build),
            "test_build",
            ["mock_result"],
            {"JIRA-123", "JIRA-456", "JIRA-789"},
        )
        self.assertEqual(result, expected_result)

if __name__ == "__main__":
    unittest.main()
