from unittest.mock import patch
from qz.core.rest.restutil import Rest
from qz.core.rest.qzunittest import QzTestCase
from qz.sdlc.rm.client import ReleaseManagerClient


class TestReleaseManagerClient(QzTestCase):

    @patch('qz.core.rest.restutil.Rest.request')
    def test_associateCrqWithContainer(self, request):
        client = ReleaseManagerClient('unittest')
        client.associateCrqWithContainer('RM-1234', 'CRQ123')

        args, kwargs = request.call_args
        assert 'associateCrqWithContainer' in args[0]
        self.assertEqual(
            kwargs,
            {
                'data': {
                    'releaseContainerID': 'RM-1234',
                    'crq': 'CRQ123'
                },
                'authentication_type': 'pki'
            }
        )

    @patch('qz.core.rest.restutil.Rest.request')
    def test_disassociateCrqWithContainer(self, request):
        client = ReleaseManagerClient('unittest')
        client.disassociateCrqWithContainer('RM-1234', 'CRQ123')

        args, kwargs = request.call_args
        assert 'disassociateCrqWithContainer' in args[0]
        self.assertEqual(
            kwargs,
            {
                'data': {
                    'releaseContainerID': 'RM-1234',
                    'crq': 'CRQ123'
                },
                'authentication_type': 'pki'
            }
        )
