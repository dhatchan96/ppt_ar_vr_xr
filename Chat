useEffect(() => {
  const stored = JSON.parse(localStorage.getItem("toolsData") || "[]");

  const fieldMap = {
    "Application Details": "applicationName",
    "Leadership Alignment": "appManager",
    "Build Management": "buildPath",
    "Deployment Management": "deploymentTool",
    "Environment Refresh": "componentsToRefresh"
  };

  const displayData = stored.map((entry, index) => {
    const row = { id: index + 1 }; // Optional: add row ID
    Object.entries(fieldMap).forEach(([section, key]) => {
      row[section] = entry[section]?.[key] || "â€”";
    });
    return row;
  });

  const gridCols = Object.keys(fieldMap).map((section) => ({
    headerName: section,
    field: section,
    sortable: true,
    filter: true
  }));

  gridCols.push({
    headerName: "Actions",
    field: "actions",
    cellRenderer: (params) => (
      <>
        <button onClick={() => handleEdit(params.data)}>Edit</button>{" "}
        <button onClick={() => handleDelete(params.data)}>Delete</button>
      </>
    )
  });

  setColumnDefs(gridCols);
  setRowData(displayData);
}, []);
